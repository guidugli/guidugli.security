---
##
# This file provides all tasks related to package management.
# It starts by setting up some configuration on the package
# management system itself.
# It includes updating packages to latest version as well as
# installing and removing software.
##

# Perform gpgcheck settings validation and other common
# validations for yum and dnf
- name: Import tasks to perform common dnf/yum verification
  include_tasks: redhat_common.yml

- name: Install yum-utils
  yum:
    name: yum-utils
    state: present

# Update the system with security packages using the system's package manager
# Only update the system if the 'update_system' variable is set to true
- name: Update packages
  yum:
    name: "*"
    state: latest
    security: "{{ package_management.security_only }}"
  when: package_management.update_system

- name: Install packages
  yum:
    name: "{{ package_management.install_packages }}"
    state: present

- name: Delete unused packages
  yum:
    name: "{{ package_management.remove_packages }}"
    state: absent

- name: Autoremove unneeded packages installed as dependencies
  yum:
    autoremove: "{{ package_management.autoremove }}"

- name: Check if system needs a reboot
  command: "needs-restarting -r"
  failed_when: false
  changed_when: false
  register: pkgmgr_boot_required

- debug:
    msg: "System needs rebooting"
  when: pkgmgr_boot_required.rc != 0

- name: Reboot system
  reboot:
    msg: "Reboot initiated by Ansible for updates"
    connect_timeout: 5
    reboot_timeout: 300
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: uptime
  when:
    - package_management.reboot_after_update | bool
    - pkgmgr_boot_required.rc != 0
    - ansible_connection != "docker"

