---
##
# This task file checks all the variables created to customize the
# configuration of the packaging system and which packages to install
# based on the features enabled for the system.
##

- name: Check if these package_management 'yes','no','true','false' values are invalid
  assert:
    quiet: yes
    that:
      - (item.value | lower) in ['true','false']
    msg: "Invalid value for {{ item.key }}. Allowed values are 'yes', 'no', 'true', 'false'."
  loop: "{{ package_management | dict2items | selectattr('key', 'equalto', 'apk_upgrade_available|update_system|security_only|gpgcheck|disable_rhnsd') | list }}"

- name: Check integer variables
  assert:
    quiet: yes
    that:
      - item.value | int >= 0
    msg: "Invalid integer value for {{ item.key }}."
  loop: "{{ package_management | dict2items | selectattr('key', 'match', 'cache_valid_time') | list }}"

- name: Check if APT upgrade command is valid
  assert:
    quiet: yes
    that:
      - package_management.apt_upgrade_command in ['dist','full','safe','yes']
    msg: "Invalid value for upgrade_command. Valid values are 'dist','full','safe' and 'yes'"

#- name: Check repositores_add information
#  assert:
#    quiet: yes
#    that:
#      - item.name is defined
#      - item.name | length > 0
#      - item.type is defined
#      - item.type in ['file', 'rpm']
#      - item.url is defined
#      - item.url | length > 0
#      - item.key is not defined or (item.key | length > 0)
#      - item.type != 'file' or (item.repofile is defined and item.repofile | length > 0)
#  loop: "{{ package_management.repositories_add }}"
#  loop_control:
#    label: "{{ item.name | default('undefined') }}"
#  when:
#    - repositories_add is defined
#    - repositories_add | length > 0
