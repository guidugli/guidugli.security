---
- name: Converge
  hosts: all
  tasks:

    - name: import test variables
      include_vars: vars/test.yml

    - name: Debian family systems need to get package list
      apt:
        name: ['dialog', 'grub2']
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == 'Debian'

    - name: Check if /etc/default/grub exists
      raw: "test -e /etc/default/grub && echo -n 'true' || echo -n 'false'"
      changed_when: false
      register: molecule_cmd_result

    # On RedHat systems containers, it does not create /etc/default/grub
    # so we create a fake one
    - name: Create /etc/default/grub
      blockinfile:
        path: /etc/default/grub
        create: yes
        mode: 644
        owner: root
        group: root
        block: |
          GRUB_TIMEOUT=5
          GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
          GRUB_DEFAULT=saved
          GRUB_DISABLE_SUBMENU=true
          GRUB_TERMINAL_OUTPUT="console"
          GRUB_CMDLINE_LINUX="quiet splash rd.driver.pre=vfio-pci pci-stub.ids=1221:0333"
          GRUB_DISABLE_RECOVERY="true"
          GRUB_ENABLE_BLSCFG=true
      when: molecule_cmd_result.stdout == 'false'

    - name: "Check if {{ gpath }} exists"
      vars:
        gpath: "{{ '/boot/grub2' if ansible_os_family == 'RedHat' else '/boot/grub' }}"
      raw: "test -e {{ gpath }} && echo -n 'true' || echo -n 'false'"
      changed_when: false
      register: molecule_cmd_result


    # On both debian and redhat, no grub.cfg will exist until it is all configured
    # so we just create an empty one
    - name: "Create {{ gpath }}"
      vars:
        gpath: "{{ '/boot/grub2' if ansible_os_family == 'RedHat' else '/boot/grub' }}"
      file:
        path: "{{ gpath }}"
        state: directory
        mode: '0755'
        owner: root
        group: root
        modification_time: preserve
        access_time: preserve
      when: molecule_cmd_result.stdout == 'false'

    - name: "Check if {{ g_cfg }} exists"
      vars:
        gpath: "{{ '/boot/grub2' if ansible_os_family == 'RedHat' else '/boot/grub' }}"
        g_cfg: "{{ gpath }}/grub.cfg"
      raw: "test -e {{ g_cfg }} && echo -n 'true' || echo -n 'false'"
      changed_when: false
      register: molecule_cmd_result

    - name: "Create {{ g_cfg }}"
      vars:
        gpath: "{{ '/boot/grub2' if ansible_os_family == 'RedHat' else '/boot/grub' }}"
        g_cfg: "{{ gpath }}/grub.cfg"
      file:
        path: "{{ g_cfg }}"
        state: touch
        mode: '0644'
        owner: root
        group: root
        modification_time: preserve
        access_time: preserve
      when: molecule_cmd_result.stdout == 'false'

    - name: "Include grub"
      include_role:
        name: "grub"
