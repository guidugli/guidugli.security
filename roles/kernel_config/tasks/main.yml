---
# tasks file for sysctl

- name: Validate provided variables and set os dependent variables
  import_tasks: asserts.yml

- name: Add files on /etc/modprobe.d to disable modules
  lineinfile:
    path: "/etc/modprobe.d/{{ item }}.conf"
    regexp: '^\s*install\s+{{ item }}\s+/bin/true'
    line: "install {{ item }} /bin/true"
    state: present
    create: yes
    owner: root
    group: root
    mode: '0644'
  loop: "{{ kernel_disable_modules | default([]) }}"
  notify: reload modules

- name: Add files on /etc/modprobe.d to blacklist modules
  lineinfile:
    path: "/etc/modprobe.d/{{ item }}.conf"
    regexp: '^\s*blacklist\s+{{ item }}'
    line: "blacklist {{ item }}"
    state: present
    create: yes
    owner: root
    group: root
    mode: '0644'
  loop: "{{ kernel_blacklist_modules | default([]) }}"
  notify: reload modules

- name: Add files on /etc/modules-load.d to autostart modules
  lineinfile:
    path: "/etc/modules-load.d/{{ item }}.conf"
    regexp: '^\s*{{ item }}'
    line: "{{ item }}"
    state: present
    create: yes
    owner: root
    group: root
    mode: '0644'
  loop: "{{ kernel_autostart_modules | default([]) }}"
  notify: reload modules

- name: Force module reload before running sysctl
  meta: flush_handlers

  # Most items are related to network, so call notify flush
  # network routes in case of any change. Maybe in the future
  # split this into two tasks, one for network keys and other
  # for non-network keys.
- name: Checking sysctl configuration
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    ignoreerrors: no
    reload: yes
    sysctl_set: yes
  loop: "{{ kernel_sysctl | default([]) }}"
  notify: flush network routes
