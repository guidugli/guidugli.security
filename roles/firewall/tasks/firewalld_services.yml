---
# For each provided service data, check if the target system has it defined 
# and correct the ports associated with it if necessary. If service do not
# exist, create the service.

- name: Retrieve service ports if it exists
  command: "firewall-cmd --permanent --service={{ item.name }} --get-ports"
  failed_when: firewalld_get_ports_cmd.rc != 0 and firewalld_get_ports_cmd.rc != 101
  changed_when: false
  register: firewalld_get_ports_cmd

- name: If service exists remove ports that are not in the list anymore
  vars:
    firewalld_service_port_list: "{{ firewalld_get_ports_cmd.stdout.split(' ') }}"
    firewalld_service_ports_to_remove: "{{ firewalld_service_port_list | difference(item.ports)  }}"
  block:
    - name: "Removing ports {{ firewalld_service_ports_to_remove | join(',') }} from {{ item.name }} service"
      command: "firewall-cmd --permanent --service={{ item.name }} --remove-port={{ portitem }}"
      loop: "{{ firewalld_service_ports_to_remove }}"
      loop_control:
        loop_var: portitem
      when: portitem is defined and portitem !=""
  # Only have to remove ports if service exists
  when: firewalld_get_ports_cmd.rc == 0

- name: Create service if it does not exist
  block:
    - name: Create empty service
      command: "firewall-cmd --permanent --new-service={{ item.name }}"

    - name: Add service description
      command: "firewall-cmd --permanent --service={{ item.name }} --set-description='{{ item.description }}'"
      when: item.description is defined

    - name: Add service short description
      command: "firewall-cmd --permanent --service={{ item.name }} --set-short='{{ item.short }}'"
      when: item.short is defined
  # If service do not exist the return code is 101
  when: firewalld_get_ports_cmd.rc == 101

- name: "Add ports '{{ firewalld_service_ports_to_add | join(',') }}' to the service {{ item.name }}"
  vars:
    firewalld_service_port_list: "{{ [] if (firewalld_get_ports_cmd.rc == 101) else firewalld_get_ports_cmd.stdout.split(' ') }}"
    firewalld_service_ports_to_add: "{{ item.ports | difference(firewalld_service_port_list) }}"
  command: "firewall-cmd --permanent --service={{ item.name }} --add-port={{ portitem }}"
  loop: "{{ firewalld_service_ports_to_add }}"
  loop_control:
    loop_var: portitem

- name: "Display final service {{ item.name }} configuration:"
  block:
    - command: "firewall-cmd --permanent --info-service={{ item.name }}"
      changed_when: false
      register: firewalld_service_info

    - debug: var=firewalld_service_info.stdout_lines

